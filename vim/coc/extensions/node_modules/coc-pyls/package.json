{
  "name": "coc-pyls",
  "version": "1.0.6",
  "description": "Pyls extension for coc",
  "main": "lib/index.js",
  "publisher": "chemzqm",
  "engines": {
    "coc": "^0.0.15"
  },
  "keywords": [
    "coc.nvim",
    "languageserver",
    "pyls"
  ],
  "scripts": {
    "clean": "rimraf lib",
    "build": "tsc -p tsconfig.json",
    "prepare": "yarn clean && yarn build"
  },
  "activationEvents": [
    "onLanguage:python"
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Pyls",
      "properties": {
        "pyls.enable": {
          "type": "boolean",
          "default": true
        },
        "pyls.trace.server": {
          "type": "string",
          "default": "off",
          "enum": [
            "off",
            "messages",
            "verbose"
          ]
        },
        "pyls.commandPath": {
          "type": "string",
          "default": ""
        },
        "pyls.configurationSources": {
          "type": "array",
          "default": [
            "pycodestyle"
          ],
          "description": "List of configuration sources to use.",
          "items": {
            "type": "string",
            "enum": [
              "pycodestyle",
              "pyflakes"
            ]
          },
          "uniqueItems": true
        },
        "pyls.plugins.jedi_completion.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable the plugin."
        },
        "pyls.plugins.jedi_definition.follow_imports": {
          "type": "boolean",
          "default": null,
          "description": "The goto call will follow imports."
        },
        "pyls.plugins.jedi_definition.follow_builtin_imports": {
          "type": "boolean",
          "default": null,
          "description": "If follow_imports is True will decide if it follow builtin imports."
        },
        "pyls.plugins.jedi_hover.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable the plugin."
        },
        "pyls.plugins.jedi_references.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable the plugin."
        },
        "pyls.plugins.jedi_signature_help.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable the plugin."
        },
        "pyls.plugins.jedi_symbols.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable the plugin."
        },
        "pyls.plugins.jedi_symbols.all_scopes": {
          "type": "boolean",
          "default": true,
          "description": "If True lists the names of all scopes instead of only the module namespace."
        },
        "pyls.plugins.mccabe.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable the plugin."
        },
        "pyls.plugins.mccabe.threshold": {
          "type": "number",
          "default": 15,
          "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
        },
        "pyls.plugins.preload.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable the plugin."
        },
        "pyls.plugins.preload.modules": {
          "type": "array",
          "default": null,
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "description": "List of modules to import on startup"
        },
        "pyls.plugins.pycodestyle.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable the plugin."
        },
        "pyls.plugins.pycodestyle.exclude": {
          "type": "array",
          "default": null,
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "description": "Exclude files or directories which match these patterns."
        },
        "pyls.plugins.pycodestyle.filename": {
          "type": "array",
          "default": null,
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "description": "When parsing directories, only check filenames matching these patterns."
        },
        "pyls.plugins.pycodestyle.select": {
          "type": "array",
          "default": null,
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "description": "Select errors and warnings"
        },
        "pyls.plugins.pycodestyle.ignore": {
          "type": "array",
          "default": null,
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "description": "Ignore errors and warnings"
        },
        "pyls.plugins.pycodestyle.hangClosing": {
          "type": "boolean",
          "default": null,
          "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
        },
        "pyls.plugins.pycodestyle.maxLineLength": {
          "type": "number",
          "default": null,
          "description": "Set maximum allowed line length."
        },
        "pyls.plugins.pydocstyle.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable or disable the plugin."
        },
        "pyls.plugins.pydocstyle.convention": {
          "type": "string",
          "default": null,
          "enum": [
            "pep257",
            "numpy"
          ],
          "description": "Choose the basic list of checked errors by specifying an existing convention."
        },
        "pyls.plugins.pydocstyle.addIgnore": {
          "type": "array",
          "default": null,
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "description": "Ignore errors and warnings in addition to the specified convention."
        },
        "pyls.plugins.pydocstyle.addSelect": {
          "type": "array",
          "default": null,
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "description": "Select errors and warnings in addition to the specified convention."
        },
        "pyls.plugins.pydocstyle.ignore": {
          "type": "array",
          "default": null,
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "description": "Ignore errors and warnings"
        },
        "pyls.plugins.pydocstyle.select": {
          "type": "array",
          "default": null,
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "description": "Select errors and warnings"
        },
        "pyls.plugins.pydocstyle.match": {
          "type": "string",
          "default": "(?!test_).*\\.py",
          "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
        },
        "pyls.plugins.pydocstyle.matchDir": {
          "type": "string",
          "default": "[^\\.].*",
          "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
        },
        "pyls.plugins.pyflakes.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable the plugin."
        },
        "pyls.plugins.rope_completion.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable the plugin."
        },
        "pyls.plugins.yapf.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable the plugin."
        },
        "pyls.rope.extensionModules": {
          "type": "string",
          "default": null,
          "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
        },
        "pyls.rope.ropeFolder": {
          "type": "array",
          "default": null,
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "description": "The name of the folder in which rope stores project configurations and data.  Pass `null` for not using such a folder at all."
        }
      }
    }
  },
  "author": "chemzqm@gmail.com",
  "license": "MIT",
  "devDependencies": {
    "@chemzqm/tsconfig": "^0.0.3",
    "@chemzqm/tslint-config": "^1.0.17",
    "@types/node": "^10.9.4",
    "coc.nvim": "^0.0.15",
    "rimraf": "^2.6.2",
    "tslint": "^5.11.0",
    "typescript": "^3.0.3"
  },
  "dependencies": {
    "tslib": "^1.9.3",
    "which": "^1.3.1"
  }
}
